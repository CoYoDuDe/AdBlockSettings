#!/bin/bash

# Setup-Skript für AdBlockSettings
# Einbinden der Helper-Ressourcen
source "/data/SetupHelper/HelperResources/IncludeHelpers"

# Standardaktionen aktivieren
standardPromptAndActions='yes'

# Installationsverzeichnis festlegen
ROOT_PATH=/data/AdBlockSettings

# Pfaddefinitionen
STATIC_CONFIG_FILE="/etc/dnsmasq_static.conf"
SOURCE_STATIC_CONFIG_FILE="${ROOT_PATH}/FileSets/configs/dnsmasq_static.conf"
BACKUP_STATIC_CONFIG_FILE="${STATIC_CONFIG_FILE}.orig"
RC_LOCAL_FILE="/data/rc.local"
RC_LOCAL_BACKUP="/data/rc.local.orig"
RC_LOCAL_CONTENT="service dnsmasq restart"
QML_DIR="/opt/victronenergy/gui/qml"
QML_BACKUP_DIR="/opt/victronenergy/gui/qml_backup"
SOURCE_QML_FILE="${ROOT_PATH}/FileSets/VersionIndependent/PageSettingsAdBlock.qml"
PATCH_FILE="${ROOT_PATH}/FileSets/PatchSource/PageSettings.qml.patch"

# Kompatibilität prüfen
if [ ! -f /etc/venus/machine ]; then
    logMessage "Kann den Venus-Gerätetyp nicht bestimmen - Skript wird beendet."
    setInstallFailed $EXIT_INCOMPATIBLE_PLATFORM "Kann den Venus-Gerätetyp nicht bestimmen."
    exit 1
fi

machine=$(cat /etc/venus/machine)
if [[ "$machine" != "raspberrypi2" && "$machine" != "raspberrypi4" ]]; then
    logMessage "$machine wird nicht unterstützt - Skript wird beendet."
    setInstallFailed $EXIT_INCOMPATIBLE_PLATFORM "$machine wird nicht unterstützt."
    exit 1
fi

# Funktionen definieren

## Einträge in rc.local hinzufügen und entfernen
# Eintrag in rc.local hinzufügen
add_entry_to_rc_local() {
    local ENTRY="$1"
    if [ ! -f "$RC_LOCAL_FILE" ]; then
        echo "$ENTRY" > "$RC_LOCAL_FILE"
    else
        if ! grep -qF "$ENTRY" "$RC_LOCAL_FILE"; then
            echo "$ENTRY" >> "$RC_LOCAL_FILE"
        fi
    fi
    chmod +x "$RC_LOCAL_FILE"
}

# Eintrag aus rc.local entfernen
remove_entry_from_rc_local() {
    local ENTRY="$1"
    [ -f "$RC_LOCAL_FILE" ] && sed -i "/^$(echo "$ENTRY" | sed 's/[\/&]/\\&/g')$/d" "$RC_LOCAL_FILE"
}

## Originaldateien sichern und wiederherstellen
# Originaldateien sichern
backup_originals() {
    logMessage "Sichere Originaldateien..."
    backupFile "$STATIC_CONFIG_FILE" "$BACKUP_STATIC_CONFIG_FILE"
    backupFile "$RC_LOCAL_FILE" "$RC_LOCAL_BACKUP"
    if [ -d "$QML_DIR" ]; then
        cp -r "$QML_DIR" "$QML_BACKUP_DIR"
        logMessage "QML-Dateien gesichert."
    fi
}

# Originaldateien wiederherstellen
restore_originals() {
    logMessage "Stelle Originaldateien wieder her..."
    restoreFile "$BACKUP_STATIC_CONFIG_FILE" "$STATIC_CONFIG_FILE"
    restoreFile "$RC_LOCAL_BACKUP" "$RC_LOCAL_FILE"
    if [ -d "$QML_BACKUP_DIR" ]; then
        rm -rf "$QML_DIR"
        mv "$QML_BACKUP_DIR" "$QML_DIR"
        logMessage "QML-Dateien wiederhergestellt."
    fi
}

## Konfigurationsdateien installieren und deinstallieren
# Konfigurationsdateien installieren
install_config() {
    logMessage "Installiere dnsmasq_static.conf..."
    if [ -f "$SOURCE_STATIC_CONFIG_FILE" ]; then
        if ! cmp -s "$SOURCE_STATIC_CONFIG_FILE" "$STATIC_CONFIG_FILE"; then
            cp "$SOURCE_STATIC_CONFIG_FILE" "$STATIC_CONFIG_FILE"
            logMessage "dnsmasq_static.conf erfolgreich installiert."
            filesUpdated=true
            rebootNeeded=true
        else
            logMessage "dnsmasq_static.conf ist bereits aktuell."
        fi
    else
        logMessage "Fehler: dnsmasq_static.conf Quelle nicht gefunden."
        setInstallFailed $EXIT_FILE_SET_ERROR "Fehler: dnsmasq_static.conf Quelle nicht gefunden."
    fi
}

# Konfigurationsdateien deinstallieren
uninstall_config() {
    logMessage "Entferne dnsmasq_static.conf..."
    [ -f "$STATIC_CONFIG_FILE" ] && rm -f "$STATIC_CONFIG_FILE"
    logMessage "dnsmasq_static.conf entfernt."
    rebootNeeded=true
}

## QML-Dateien kopieren und entfernen
# QML-Dateien kopieren
install_qml_files() {
    logMessage "Kopiere QML-Dateien..."
    if [ -f "$SOURCE_QML_FILE" ]; then
        cp "$SOURCE_QML_FILE" "$QML_DIR"
        logMessage "QML-Datei erfolgreich kopiert."
        restartGui=true
    else
        logMessage "Fehler: QML-Quelle nicht gefunden."
        setInstallFailed $EXIT_FILE_SET_ERROR "Fehler: QML-Quelle nicht gefunden."
    fi
}

# QML-Dateien entfernen
uninstall_qml_files() {
    logMessage "Entferne QML-Dateien..."
    if [ -f "$SOURCE_QML_FILE" ]; then
        filename=$(basename "$SOURCE_QML_FILE")
        [ -f "$QML_DIR/$filename" ] && rm -f "$QML_DIR/$filename"
        logMessage "QML-Datei entfernt."
        restartGui=true
    else
        logMessage "Fehler: QML-Quelle nicht gefunden."
    fi
}

## Patch anwenden und entfernen
# Patch anwenden
apply_patch() {
    logMessage "Wende Patch an..."
    if [ -f "$PATCH_FILE" ]; then
        patch -N "$QML_DIR/PageSettings.qml" < "$PATCH_FILE"
        if [ $? -eq 0 ]; then
            logMessage "Patch erfolgreich angewendet."
            restartGui=true
        else
            logMessage "Fehler beim Anwenden des Patches."
            setInstallFailed $EXIT_FILE_SET_ERROR "Fehler beim Anwenden des Patches."
        fi
    else
        logMessage "Fehler: Patch-Datei nicht gefunden."
        setInstallFailed $EXIT_FILE_SET_ERROR "Fehler: Patch-Datei nicht gefunden."
    fi
}

# Patch entfernen
remove_patch() {
    logMessage "Entferne Patch..."
    if [ -f "$PATCH_FILE" ]; then
        patch -R "$QML_DIR/PageSettings.qml" < "$PATCH_FILE"
        if [ $? -eq 0 ]; then
            logMessage "Patch erfolgreich entfernt."
            restartGui=true
        else
            logMessage "Fehler beim Entfernen des Patches."
            setInstallFailed $EXIT_FILE_SET_ERROR "Fehler beim Entfernen des Patches."
        fi
    else
        logMessage "Fehler: Patch-Datei nicht gefunden."
    fi
}

## rc.local einrichten und zurücksetzen
# rc.local einrichten
setup_rc_local() {
    logMessage "Richte rc.local ein..."
    add_entry_to_rc_local "$RC_LOCAL_CONTENT"
    rebootNeeded=true
}

# rc.local zurücksetzen
reset_rc_local() {
    logMessage "Setze rc.local zurück..."
    remove_entry_from_rc_local "service dnsmasq restart"
    rebootNeeded=true
}

case "$scriptAction" in
    INSTALL|CHECK)
        backup_originals
        install_config
        install_qml_files
        apply_patch
        setup_rc_local
        ;;
    UNINSTALL)
        restore_originals
        uninstall_config
        uninstall_qml_files
        remove_patch
        reset_rc_local
        ;;
    *)
        logMessage "Keine spezifische Aktion angegeben. Führe Standardinstallation durch..."
        backup_originals
        install_config
        install_qml_files
        apply_patch
        setup_rc_local
        ;;
esac

logMessage "Skriptausführung abgeschlossen."
endScript
